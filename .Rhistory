DirectorioPadre <-"C:/Users/fcolin/Documents/GitHub/Codigo-IMPEX/"
library(stringr)
library(readxl)
library(zip)
InicioProceso<-paste("Inicio de todo el proceso", Sys.time())
excel<-choose.files()
setwd(inicio)
source("PrimeraExtraccion.R")
if (file.exists(nomzip)) {
unzip(nomzip)
file.remove(nomzip)
}else{
print("No se genero el zip inicial correctamente")
}
#
imagenes<-list.files()
jpg<-substr(imagenes, start = nchar(imagenes)-3, stop = (nchar(imagenes)))
imagenes<-imagenes[jpg==".jpg"]
errores<-imagenes[str_detect(imagenes, "Error")]
if (!identical(errores, character(0))) {
e<-paste(guardar, "\\Errores", sep = "")
dir.create(e)
nombre <- function(imagenes){
guion <- str_locate(imagenes, "_")[1:length(imagenes)]
substr(imagenes, start = guion +1, stop = nchar(imagenes)-4)
}
sku <- function(imagenes){
guion<-str_locate(nombre(imagenes), "_")[1:length(imagenes)]
a<-substr(nombre(imagenes), start = guion+1, stop = nchar(imagenes))
guion<-str_locate(a, "_")[1:length(imagenes)]
substr(a, start = 1, stop = guion-1)
}
sku_errores <- unique(sku(errores))
for (i in 1:length(sku_errores)) {
imagenes_error <- imagenes[str_detect(imagenes, sku_errores[i])]
file_move(imagenes_error, e)
}
}
setwd(inicio)
print(paste("Comienzo de creación Lotes 32 megas ", Sys.time()))
source("CreacionLotes.R")
print(paste("Fin de creación Lotes 32 megas ", Sys.time()))
setwd(inicio)
files<-list.dirs(carpeta)
dirlotes<-files[str_detect(files, "Lote")]
print(paste("Inicio Creacion IMPEX", Sys.time()))
setwd(DirectorioPadre)
print(carpeta)
megas<-32
source("ValidacionInputs.R")
#-------------------
setwd(DirectorioPadre)
source("RAW.R")
setwd(DirectorioPadre)
source("VerificandoErroresEtiqueta.R")
#-------------------
setwd(DirectorioPadre)
source("RAW.R")
setwd(DirectorioPadre)
DirectorioPadre
source("RAW.R")
# Librerias ---------------------------------------------------------------
# if ya estan instaladas?
library(stringr)
library("fs")
library(exiftoolr) # necesita una actualizacion
library(magick)
library(utils)
#install_exiftool()
# Funciones ---------------------------------------------------------------
mover_errores<-function(num_errores, errores){
di_errores<-guardar
setwd(di_errores)
n<-paste("carpeta_errores_",basename(carpeta), sep="" )
if ((sum(list.files()==n))==0) { dir.create(n)}
di_errores<-paste(di_errores, "\\",n, sep = "")
for (j in 1:num_errores) {
file_move(paste(carpeta,"\\", errores[j], sep="") , di_errores)
}
setwd(carpeta)
}
subreporte<-function(reporte1, mensaje){
if (is.null(reporte1$Archivo)) {
print(mensaje)
}else{
numero_errores<-length(unique(reporte1$Archivo))
mover_errores(numero_errores, errores = unique(reporte1$Archivo))
imagenes<-list.files(carpeta)
}
}
# Primer filtro -----------------------------------------------------------
setwd(carpeta)
imagenes<-list.files(carpeta)
imagenes
t<-1
carpeta<-dirlotes[t]
setwd(DirectorioPadre)
print(carpeta)
#-------------------
setwd(DirectorioPadre)
source("RAW.R")
setwd(DirectorioPadre)
source("VerificandoErroresEtiqueta.R")
setwd(DirectorioPadre)
source("VerificandoString.R")
setwd(DirectorioPadre)
source("Requerimientos.R")
setwd(DirectorioPadre)
source("GeneracionTallas.R")
setwd(DirectorioPadre)
source("CodigoItemsUnicos.R")
setwd(DirectorioPadre)
source("UltimosDetalles.R")
setwd(DirectorioPadre)
source("Lotes.R")
setwd(DirectorioPadre)
source("Impresion.R")
inicio<-"C:/Users/fcolin/Documents/GitHub/Codigo-IMPEX/R-4.2.1/bin"
DirectorioPadre <-"C:/Users/fcolin/Documents/GitHub/Codigo-IMPEX/"
#inicio<-paste("C:/Users/", Sys.info()["user"],"/Downloads/Aplicacion/Codigo-IMPEX/R-4.2.1/bin", sep="")
#DirectorioPadre <- paste("C:/Users/", Sys.info()["user"], "/Downloads/Aplicacion/Codigo-IMPEX", sep = "" )
library(stringr)
library(readxl)
library(zip)
InicioProceso<-paste("Inicio de todo el proceso", Sys.time())
excel<-choose.files()
setwd(inicio)
source("PrimeraExtraccion.R")
########################################
# if
if (file.exists(nomzip)) {
unzip(nomzip)
file.remove(nomzip)
}else{
print("No se genero el zip inicial correctamente")
}
#
imagenes<-list.files()
jpg<-substr(imagenes, start = nchar(imagenes)-3, stop = (nchar(imagenes)))
imagenes<-imagenes[jpg==".jpg"]
###############################################
###### Priemro filtramos los que tengan Error
errores<-imagenes[str_detect(imagenes, "Error")]
if (!identical(errores, character(0))) {
e<-paste(guardar, "\\Errores", sep = "")
dir.create(e)
nombre <- function(imagenes){
guion <- str_locate(imagenes, "_")[1:length(imagenes)]
substr(imagenes, start = guion +1, stop = nchar(imagenes)-4)
}
sku <- function(imagenes){
guion<-str_locate(nombre(imagenes), "_")[1:length(imagenes)]
a<-substr(nombre(imagenes), start = guion+1, stop = nchar(imagenes))
guion<-str_locate(a, "_")[1:length(imagenes)]
substr(a, start = 1, stop = guion-1)
}
sku_errores <- unique(sku(errores))
for (i in 1:length(sku_errores)) {
imagenes_error <- imagenes[str_detect(imagenes, sku_errores[i])]
file_move(imagenes_error, e)
}
}
##################################################
setwd(inicio)
print(paste("Comienzo de creación Lotes 32 megas ", Sys.time()))
source("CreacionLotes.R")
print(paste("Fin de creación Lotes 32 megas ", Sys.time()))
####
setwd(inicio)
files<-list.dirs(carpeta)
dirlotes<-files[str_detect(files, "Lote")]
print(paste("Inicio Creacion IMPEX", Sys.time()))
t<-1
dirlotes
carpeta<-dirlotes[t]
setwd(DirectorioPadre)
print(carpeta)
source("Ejecutable.R")
source("ReporteCompartido.R")
source("nosku.R")
reporte
reporte$Estado
unique(reporte$Estado) == "El SKU no se encuentra en cubo"
sum(unique(reporte$Estado) == "El SKU no se encuentra en cubo")
sum(unique(reporte$Estado) == "El SKU no se encuentra en cubo")>=0
if(!is.null(reporte)){
if(sum(unique(reporte$Estado) == "El SKU no se encuentra en cubo")>=0){
Producto<-reporte$Archivo
Responsable <- as.character(Sys.info()["user"])
Fecha<-as.character.Date(Sys.time())
nosku<-data.frame("NoSKUCubo", Producto, Responsable, Fecha)
if(dir.exists("S:/OMNI/ReporteGeneral")){
setwd("S:/OMNI/ReporteGeneral")
csv<-read.csv("ProblemasSKU.csv")
nosku<-rbind(csv, nosku)
write.csv(nosku, "ProblemasSKU.csv", row.names = FALSE)
}else{
setwd(guardar)
if (file.exists("ENVIAR-a-RESPONSABLE-ProblemasSKU.csv")){
csv<-read.csv("ENVIAR-a-RESPONSABLE-ProblemasSKU.csv")
csv<-data.frame(csv)
csv<-rbind(csv, nosku)
write.csv(csv, "ENVIAR-a-RESPONSABLE-ProblemasSKU.csv", row.names = FALSE)
}else{
write.csv(nosku, "ENVIAR-a-RESPONSABLE-ProblemasSKU.csv", row.names = FALSE)
}
}
}
}
inicio<-"C:/Users/fcolin/Documents/GitHub/Codigo-IMPEX/R-4.2.1/bin"
inicio<-"C:/Users/fcolin/Documents/GitHub/Codigo-IMPEX/R-4.2.1/bin"
DirectorioPadre <-"C:/Users/fcolin/Documents/GitHub/Codigo-IMPEX/"
#inicio<-paste("C:/Users/", Sys.info()["user"],"/Downloads/Aplicacion/Codigo-IMPEX/R-4.2.1/bin", sep="")
#DirectorioPadre <- paste("C:/Users/", Sys.info()["user"], "/Downloads/Aplicacion/Codigo-IMPEX", sep = "" )
library(stringr)
library(readxl)
library(zip)
InicioProceso<-paste("Inicio de todo el proceso", Sys.time())
excel<-choose.files()
setwd(inicio)
source("PrimeraExtraccion.R")
########################################
# if
if (file.exists(nomzip)) {
unzip(nomzip)
file.remove(nomzip)
}else{
print("No se genero el zip inicial correctamente")
}
#
imagenes<-list.files()
jpg<-substr(imagenes, start = nchar(imagenes)-3, stop = (nchar(imagenes)))
imagenes<-imagenes[jpg==".jpg"]
###############################################
###### Priemro filtramos los que tengan Error
errores<-imagenes[str_detect(imagenes, "Error")]
if (!identical(errores, character(0))) {
e<-paste(guardar, "\\Errores", sep = "")
dir.create(e)
nombre <- function(imagenes){
guion <- str_locate(imagenes, "_")[1:length(imagenes)]
substr(imagenes, start = guion +1, stop = nchar(imagenes)-4)
}
sku <- function(imagenes){
guion<-str_locate(nombre(imagenes), "_")[1:length(imagenes)]
a<-substr(nombre(imagenes), start = guion+1, stop = nchar(imagenes))
guion<-str_locate(a, "_")[1:length(imagenes)]
substr(a, start = 1, stop = guion-1)
}
sku_errores <- unique(sku(errores))
for (i in 1:length(sku_errores)) {
imagenes_error <- imagenes[str_detect(imagenes, sku_errores[i])]
file_move(imagenes_error, e)
}
}
##################################################
setwd(inicio)
print(paste("Comienzo de creación Lotes 32 megas ", Sys.time()))
source("CreacionLotes.R")
print(paste("Fin de creación Lotes 32 megas ", Sys.time()))
####
setwd(inicio)
files<-list.dirs(carpeta)
dirlotes<-files[str_detect(files, "Lote")]
print(paste("Inicio Creacion IMPEX", Sys.time()))
t<-1
length(dirlotes)
carpeta<-dirlotes[t]
t
carpeta<-dirlotes[t]
carpeta
setwd(DirectorioPadre)
print(carpeta)
source("Ejecutable.R")
source("ReporteCompartido.R")
source("nosku.R")
setwd(guardar)
dir_delete(carpeta)
t<-2
carpeta<-dirlotes[t]
setwd(DirectorioPadre)
print(carpeta)
# DirectorioPadre<-paste("C:/Users/", Sys.info()["user"], "/Downloads/Aplicacion/Codigo-IMPEX", sep = "" )
setwd(DirectorioPadre)
megas<-32
source("ValidacionInputs.R")
#-------------------
setwd(DirectorioPadre)
source("RAW.R")
setwd(DirectorioPadre)
source("VerificandoErroresEtiqueta.R")
setwd(DirectorioPadre)
source("VerificandoString.R")
setwd(DirectorioPadre)
source("Requerimientos.R")
imagenes<-list.files(carpeta)
items<-unique(sku(imagenes))
imagenes
if(!identical(imagenes, character(0))){
setwd(DirectorioPadre)
source("GeneracionTallas.R")
pctg <- paste(round(w/11 *100, 0), "% completado")
setTkProgressBar(pb, w, label = pctg)
w<-w+1
#setwd(DirectorioPadre)
#source("ItemsUnicosFamilia.R")
#pctg <- paste(round(w/11 *100, 0), "% completado")
#setTkProgressBar(pb, w, label = pctg)
#w<-w+1
setwd(DirectorioPadre)
source("CodigoItemsUnicos.R")
pctg <- paste(round(w/11 *100, 0), "% completado")
setTkProgressBar(pb, w, label = pctg)
w<-w+1
# setwd(DirectorioPadre)
# source("CodigoItemsFamilia.R")
# pctg <- paste(round(w/11 *100, 0), "% completado")
# setTkProgressBar(pb, w, label = pctg)
# w<-w+1
setwd(DirectorioPadre)
source("UltimosDetalles.R")
pctg <- paste(round(w/11 *100, 0), "% completado")
setTkProgressBar(pb, w, label = pctg)
w<-w+1
setwd(DirectorioPadre)
source("Lotes.R")
pctg <- paste(round(w/11 *100, 0), "% completado")
setTkProgressBar(pb, w, label = pctg)
w<-w+1
setwd(DirectorioPadre)
source("Impresion.R")
pctg <- paste(round(w/11 *100, 0), "% completado")
setTkProgressBar(pb, w, label = pctg)
w<-w+1
Sys.sleep(0.7)
close(pb) # Cerramos la conexión
}else{
print("Carpeta vacia, revisar errores")
}
imagenes<-list.files(carpeta)
items<-unique(sku(imagenes))
setwd(DirectorioPadre)
source("GeneracionTallas.R")
setwd(DirectorioPadre)
source("CodigoItemsUnicos.R")
setwd(DirectorioPadre)
source("UltimosDetalles.R")
setwd(DirectorioPadre)
source("Lotes.R")
setwd(DirectorioPadre)
source("Impresion.R")
inicio<-"C:/Users/fcolin/Documents/GitHub/Codigo-IMPEX/R-4.2.1/bin"
DirectorioPadre <-"C:/Users/fcolin/Documents/GitHub/Codigo-IMPEX/"
setwd(DirectorioPadre)
inicio<-"C:/Users/fcolin/Documents/GitHub/Codigo-IMPEX/R-4.2.1/bin"
DirectorioPadre <-"C:/Users/fcolin/Documents/GitHub/Codigo-IMPEX/"
#inicio<-paste("C:/Users/", Sys.info()["user"],"/Downloads/Aplicacion/Codigo-IMPEX/R-4.2.1/bin", sep="")
#DirectorioPadre <- paste("C:/Users/", Sys.info()["user"], "/Downloads/Aplicacion/Codigo-IMPEX", sep = "" )
library(stringr)
library(readxl)
library(zip)
InicioProceso<-paste("Inicio de todo el proceso", Sys.time())
excel<-choose.files()
setwd(inicio)
source("PrimeraExtraccion.R")
########################################
# if
if (file.exists(nomzip)) {
unzip(nomzip)
file.remove(nomzip)
}else{
print("No se genero el zip inicial correctamente")
}
#
imagenes<-list.files()
jpg<-substr(imagenes, start = nchar(imagenes)-3, stop = (nchar(imagenes)))
imagenes<-imagenes[jpg==".jpg"]
###############################################
###### Priemro filtramos los que tengan Error
errores<-imagenes[str_detect(imagenes, "Error")]
if (!identical(errores, character(0))) {
e<-paste(guardar, "\\Errores", sep = "")
dir.create(e)
nombre <- function(imagenes){
guion <- str_locate(imagenes, "_")[1:length(imagenes)]
substr(imagenes, start = guion +1, stop = nchar(imagenes)-4)
}
sku <- function(imagenes){
guion<-str_locate(nombre(imagenes), "_")[1:length(imagenes)]
a<-substr(nombre(imagenes), start = guion+1, stop = nchar(imagenes))
guion<-str_locate(a, "_")[1:length(imagenes)]
substr(a, start = 1, stop = guion-1)
}
sku_errores <- unique(sku(errores))
for (i in 1:length(sku_errores)) {
imagenes_error <- imagenes[str_detect(imagenes, sku_errores[i])]
file_move(imagenes_error, e)
}
}
##################################################
setwd(inicio)
print(paste("Comienzo de creación Lotes 32 megas ", Sys.time()))
source("CreacionLotes.R")
print(paste("Fin de creación Lotes 32 megas ", Sys.time()))
####
setwd(inicio)
files<-list.dirs(carpeta)
dirlotes<-files[str_detect(files, "Lote")]
print(paste("Inicio Creacion IMPEX", Sys.time()))
t<-1
carpeta<-dirlotes[t]
setwd(DirectorioPadre)
print(carpeta)
source("Ejecutable.R")
source("ReporteCompartido.R")
source("nosku.R")
setwd(guardar)
dir_delete(carpeta)
t<-2
carpeta<-dirlotes[t]
setwd(DirectorioPadre)
#source("Directorios.txt")
# DirectorioPadre<-paste("C:/Users/", Sys.info()["user"], "/Downloads/Aplicacion/Codigo-IMPEX", sep = "" )
setwd(DirectorioPadre)
# carpeta<-choose.dir(caption = "Seleccione la carpeta que contiene las imagenes")
# guardar<-choose.dir(caption = "¿Dónde se guardarán los resultados?")
megas<-32
source("ValidacionInputs.R")
setwd(DirectorioPadre)
source("Requerimientos.R")
imagenes<-list.files(carpeta)
items<-unique(sku(imagenes))
imagenes
setwd(DirectorioPadre)
source("GeneracionTallas.R")
setwd(DirectorioPadre)
setwd(DirectorioPadre)
source("CodigoItemsUnicos.R")
setwd(DirectorioPadre)
source("UltimosDetalles.R")
setwd(DirectorioPadre)
source("Lotes.R")
setwd(DirectorioPadre)
source("Impresion.R")
inicio<-"C:/Users/fcolin/Documents/GitHub/Codigo-IMPEX/R-4.2.1/bin"
DirectorioPadre <-"C:/Users/fcolin/Documents/GitHub/Codigo-IMPEX/"
#inicio<-paste("C:/Users/", Sys.info()["user"],"/Downloads/Aplicacion/Codigo-IMPEX/R-4.2.1/bin", sep="")
#DirectorioPadre <- paste("C:/Users/", Sys.info()["user"], "/Downloads/Aplicacion/Codigo-IMPEX", sep = "" )
library(stringr)
library(readxl)
library(zip)
InicioProceso<-paste("Inicio de todo el proceso", Sys.time())
excel<-choose.files()
setwd(inicio)
source("PrimeraExtraccion.R")
########################################
# if
if (file.exists(nomzip)) {
unzip(nomzip)
file.remove(nomzip)
}else{
print("No se genero el zip inicial correctamente")
}
#
imagenes<-list.files()
jpg<-substr(imagenes, start = nchar(imagenes)-3, stop = (nchar(imagenes)))
imagenes<-imagenes[jpg==".jpg"]
###############################################
###### Priemro filtramos los que tengan Error
errores<-imagenes[str_detect(imagenes, "Error")]
if (!identical(errores, character(0))) {
e<-paste(guardar, "\\Errores", sep = "")
dir.create(e)
nombre <- function(imagenes){
guion <- str_locate(imagenes, "_")[1:length(imagenes)]
substr(imagenes, start = guion +1, stop = nchar(imagenes)-4)
}
sku <- function(imagenes){
guion<-str_locate(nombre(imagenes), "_")[1:length(imagenes)]
a<-substr(nombre(imagenes), start = guion+1, stop = nchar(imagenes))
guion<-str_locate(a, "_")[1:length(imagenes)]
substr(a, start = 1, stop = guion-1)
}
sku_errores <- unique(sku(errores))
for (i in 1:length(sku_errores)) {
imagenes_error <- imagenes[str_detect(imagenes, sku_errores[i])]
file_move(imagenes_error, e)
}
}
##################################################
setwd(inicio)
print(paste("Comienzo de creación Lotes 32 megas ", Sys.time()))
source("CreacionLotes.R")
print(paste("Fin de creación Lotes 32 megas ", Sys.time()))
####
setwd(inicio)
files<-list.dirs(carpeta)
dirlotes<-files[str_detect(files, "Lote")]
print(paste("Inicio Creacion IMPEX", Sys.time()))
for (t in 1:length(dirlotes)) {
carpeta<-dirlotes[t]
setwd(DirectorioPadre)
print(carpeta)
source("Ejecutable.R")
source("ReporteCompartido.R")
source("nosku.R")
setwd(guardar)
dir_delete(carpeta)
}
print(paste("Fin Creacion IMPEX", Sys.time()))
print(InicioProceso)
print(paste("Fin de todo el proceso", Sys.time()))
